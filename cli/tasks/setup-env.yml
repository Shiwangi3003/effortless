---
- name: Setup .env
  uri:
    url: "{{ vault_url }}"
    method: GET
    status_code: 200
    return_content: yes
    headers:
      X-Vault-Token: "{{ vault_access_token }}"
  register: vault_response

- name: Parse Vault JSON response and set variables
  set_fact:
    DB_CONNECTION: "{{ vault_response.json.data.data.DB_CONNECTION }}"
    DB_DATABASE: "{{ vault_response.json.data.data.DB_DATABASE }}"
    DB_USERNAME: "{{ vault_response.json.data.data.DB_USERNAME }}"
    DB_PASSWORD: "{{ vault_response.json.data.data.DB_PASSWORD }}"

- name: Convert Vault JSON response to .env format
  set_fact:
    env_content: |
      {% for key, value in vault_response.json.data.data.items() %}
      {% if " " in value %}
      {{ key | upper }}="{{ value }}"
      {% else %}
      {{ key | upper }}={{ value }}
      {% endif %}
      {% endfor %}

- name: Create /var/www/{{ domain }}/shared directory
  become: true
  file:
    path: "/var/www/{{ domain }}/shared"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: directory
    mode: '0755'

- name: Create .env file
  copy:
    force: no
    dest: "/var/www/{{ domain }}/shared/.env"
    content: "{{ env_content }}"
